网络层 数据包 65535字节，如果不分片，数据包数据部分最大不超过1480字节（前面固定20字节）
数据链路层 帧的数据部分 1500字节 ，帧最小64，固定部分，18范围是46-1500.

TTL默认值:
Linux   64
Windows 128
Unix    255

协议号:
ICMP  1
IGMP  2
TCP   6
UDP   17
IPv6  41

静态路由，管理员告诉路由器怎么走，所有没有直连的；适合小规模网络，不能自动调整路由

动态路由，路由器通过IP协议自己学习怎么走；RIP协议，周期性广播路由表、跳数；30秒更新一下路由信息；
	最大跳数 15跳

IP协议： RIP， OSPF

ICMP 网际控制报文协议
IGMP Internet组播管理协议

传输层的两个协议：
    TCP 需要将传输的文件分段 建立会话 可靠传输 流量控制
    UDP 一个数据包就能完成数据通信 不分段 不需要建立会话 不需要流量控制 不可靠传输
        如：DNS解析、QQ文字聊天、屏幕广播 （多播、广播）
                         

常见的应用层协议使用的端口:
    http      = TCP + 80
    https     = TCP + 443
    RDP       = TCP + 3389 远程桌面
    FTP       = TCP + 21
    SMTP      = TCP + 25
    POP3      = TCP + 110
    Telnet    = TCP + 23
    SQL       = TCP + 1433
    共享文件夹 = TCP + 445
    DNS       = UDP + 53                        
                      

服务使用TCP或UDP的端口侦听客户端请求
客户端使用IP地址定位服务器，使用目标端口定位服务

可以在服务器网卡上设置只开放必要的端口，实现服务器网络安全
更改服务默认端口，迷惑入侵者

传输层功能：为相互通信的应用进程提供了逻辑通信

传输层协议和网络层协议之间的区别：
    TCP＆UDP协议的作用范围：提供进程之间端到端的逻辑通信
    IP协议作用范围：提供主机之间的逻辑通信
    
网络层的协议号，传输层的端口
	
端口号是16位二进制数 0-65535
	熟知端口 0-1023
	登记端口 1024-49151
	客户端端口 49152-65535

TCP 可靠传输、流量控制、避免网络拥塞
TCP 一对一，全双工，面向字节流
TCP 连接的端点 -> 套接字 Socket（IP地址+端口）
TCP 连接：
	{Socket1, Socket2} = {(IP1:Port1), (IP2:Port2)}

TCP 可靠传输的实现：确认和重传机制 即 自动重传请求ARQ
					Automatic Repeat reQuest
					
ARQ 重传是自动进行的

流水线传输：发送方连续发送多个分组，不必没发完一个分组
			就停下等待确认，提高信道利用率。
			接收方一般采用累计确认

发送窗口


二层设备是工作数据链路层的设备。二层交换机可以识别数据包中的MAC地址信息，根据MAC地址进行转发，并将这些MAC地址与对应的端口记录在自己内部的一个地址表中。具体的工作流程如下： 
	（1） 当交换机从某个端口收到一个数据包，它先读取包头中的源MAC地址，这样它就知道源MAC地址的机器是连在哪个端口上的； 
	（2） 再去读取包头中的目的MAC地址，并在地址表中查找相应的端口； 
	（3） 如表中有与这目的MAC地址对应的端口，把数据包直接复制到这端口上； 
	（4） 如表中找不到相应的端口则把数据包广播到所有端口上，当目的机器对源机器回应时，交换机又可以学习一目的MAC地址与哪个端口对应，在下次传送数据时就不再需要对所有端口进行广播了。 
	不断的循环这个过程，对于全网的MAC地址信息都可以学习到，二层交换机就是这样建立和维护它自己的地址表。

	三层设备是工作在网络层的设备。路由器是最常用的三层设备，利用不同网络的ID号（即IP地址）来确定数据转发的地址。IP地址是在软件中实现的，描述的是设备所在的网络，有时这些第三层的地址也称为协议地址或者网络地址

			   
         
                                                                                                           
                         
                         
                         
                         

